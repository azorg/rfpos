/*
 * Вычисление координат передатчика по задержкам сигнала до приёмников
 * Version: 0.1a
 * File: "rfpos.h"
 * Coding: UTF8
 * (C) 2018 Alex Zorg <azorg@mail.ru>
 * Licensed by GNU General Public License version 2
 */

#ifndef RFPOS_H
#define RFPOS_H
//----------------------------------------------------------------------------
#include "la.h" // библиотека работы с векторами и матрицами
//----------------------------------------------------------------------------
// скорость света в вакууме [м/с]
#define RFPOS_C 299792458. // +/- 1.2 м/с
//----------------------------------------------------------------------------
// структура данных основного компонента
typedef struct {
  int d; // максимальная размероность координат (2 или 3)
  int n; // максимальное число приёмников, принимаюих сигнал передатчика

  la_matrix_t y;  // матрица входных данных [d+1][n]
  la_vector_t x;  // искомые в простарнстве и времени координаты [d+1]
  la_vector_t f;  // вектор "невязки" размера n
  la_matrix_t w;  // значение матрицы Якоби для x и y
  la_vector_t dx; // вектор решения системы линейных уравнений

} rfpos_t;
//----------------------------------------------------------------------------
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus
//----------------------------------------------------------------------------
// инициализация основного компонента, выделение памяти
// (в случае ошибки возращается отрицательный код ошибки)
void rfpos_init(
  rfpos_t *self, // структура данных компонента
  int d,         // максимальная размерность координат (2 или 3)
  int n);        // максимальное число приёмников
//----------------------------------------------------------------------------
// деинициализация компонента, освобождение памяти
void rfpos_free(rfpos_t *self);
//----------------------------------------------------------------------------
// основная функция для численного решения системы квадратных уравнений
// (в случае ошибки возращается отрицательный код ошибки,
// в случае успеха - число выполненных итераций)
// координаты передаются и возвращаются в метрах, время в секундах
int rfpos_calc(
  rfpos_t *self, // структура данных компонента
  // на входе:
  int it,    // максимальное число итераций
  double e,  // желаемая численная точность оценки координат [м]
  int d,     // размерность координат или число неизвестных (2 или 3)
  int n,     // число приёмников, принявших задерженный сигнал (n > d)
  double *m, // матрица координат приёмников [n][d]
  double *t, // вектор временных меток приёма сигнала приёмниками [с], n шт
  double *p, // радиус вектор предпологаемого нахождения приёмника
  // на выходе:
  double *t0, // оценка времени излучения сигнала передатчиком
  double *r); // радиус вектор приёмника, если решение найдено [м], d шт
//----------------------------------------------------------------------------
#ifdef __cplusplus
}
#endif // __cplusplus
//----------------------------------------------------------------------------
#endif // RFPOS_H

/*** end of "rfpos.h" ***/

